/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace Ufal.Parsito {

using System;
using System.Runtime.InteropServices;

public class Version : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal Version(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(Version obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~Version() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          parsito_csharpPINVOKE.delete_Version(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public uint major {
    set {
      parsito_csharpPINVOKE.Version_major_set(swigCPtr, value);
    } 
    get {
      uint ret = parsito_csharpPINVOKE.Version_major_get(swigCPtr);
      return ret;
    } 
  }

  public uint minor {
    set {
      parsito_csharpPINVOKE.Version_minor_set(swigCPtr, value);
    } 
    get {
      uint ret = parsito_csharpPINVOKE.Version_minor_get(swigCPtr);
      return ret;
    } 
  }

  public uint patch {
    set {
      parsito_csharpPINVOKE.Version_patch_set(swigCPtr, value);
    } 
    get {
      uint ret = parsito_csharpPINVOKE.Version_patch_get(swigCPtr);
      return ret;
    } 
  }

  public string prerelease {
    set {
      parsito_csharpPINVOKE.Version_prerelease_set(swigCPtr, value);
      if (parsito_csharpPINVOKE.SWIGPendingException.Pending) throw parsito_csharpPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = parsito_csharpPINVOKE.Version_prerelease_get(swigCPtr);
      if (parsito_csharpPINVOKE.SWIGPendingException.Pending) throw parsito_csharpPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public static Version current() {
    Version ret = new Version(parsito_csharpPINVOKE.Version_current(), true);
    return ret;
  }

  public Version() : this(parsito_csharpPINVOKE.new_Version(), true) {
  }

}

}
